#include <iostream>
#include <string>

using namespace std;

struct Barang {
    string namaBarang;
    int jumlah;
    Barang *next;
};

Barang *head = NULL;

Barang* create_new_item(string nama, int jml) {
    Barang* newItem = new Barang;
    newItem->namaBarang = nama;
    newItem->jumlah = jml;
    newItem->next = NULL;
    return newItem;
}
void tambahBarang(string nama, int jml) {
    Barang* newItem = create_new_item(nama, jml);
    if (head == NULL) {
        head = newItem;
    } else {
        newItem->next = head;
        head = newItem;
    }
    cout << "\n-> '" << nama << "' (" << jml << ") telah ditambahkan.\n";
}

void hapusBarang(string nama) {
    if (head == NULL) {
        cout << "\n-> Inventaris kosong.\n";
        return;
    }

    Barang *current = head;
    Barang *previous = NULL;

    if (current != NULL && current->namaBarang == nama) {
        head = current->next;
        delete current;
        cout << "\n-> '" << nama << "' telah dihapus.\n";
        return;
    }

    while (current != NULL && current->namaBarang != nama) {
        previous = current;
        current = current->next;
    }

    if (current == NULL) {
        cout << "\n-> '" << nama << "' tidak ditemukan.\n";
        return;
    }

    previous->next = current->next;
    delete current;
    cout << "\n-> '" << nama << "' telah dihapus.\n";
}

void tampilkanInventaris() {
    if (head == NULL) {
        cout << "\n[ Inventaris kosong ]\n";
        return;
    }

    Barang *ptr = head;
    cout << "\nDAFTAR INVENTARIS\n";
    int nomor = 1;
    while (ptr != NULL) {
        cout << nomor++ << ". " << ptr->namaBarang << " (" << ptr->jumlah << ")\n";
        ptr = ptr->next;
    }
}

void clearMemory() {
    Barang *ptr = head;
    Barang *nextNode;
    while (ptr != NULL) {
        nextNode = ptr->next;
        delete ptr;
        ptr = nextNode;
    }
    head = NULL;
}

int main() {
    int choice, jumlah;
    string nama;

    while (true) {
        cout << "\nMENU:\n1. Tambah Barang\n2. Hapus Barang\n3. Tampilkan Inventaris\n4. Keluar\nPilihan: ";
        cin >> choice;
        cin.ignore(10000, '\n');

        switch (choice) {
            case 1:
                cout << "Nama barang: ";
                getline(cin, nama);
                cout << "Jumlah: ";
                cin >> jumlah;
                tambahBarang(nama, jumlah);
                break;
            case 2:
                cout << "Nama barang yang dihapus: ";
                getline(cin, nama);
                hapusBarang(nama);
                break;
            case 3:
                tampilkanInventaris();
                break;
            case 4:
                clearMemory();
                cout << "\nProgram selesai.\n";
                return 0;
            default:
                cout << "\nPilihan tidak valid.\n";
                break;
        }
    }
    return 0;
}
